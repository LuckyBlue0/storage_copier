console.log("Panel.js is loading..."),document.addEventListener("DOMContentLoaded",(function(){console.log("DOM Content Loaded");const e=document.getElementById("refresh"),n=document.getElementById("storage-list"),t=document.getElementById("status");function o(e,n=!1){console.log("Status:",e,"Error:",n),t.textContent=e,t.className=n?"error":"success",setTimeout((()=>{t.textContent="",t.className=""}),3e3)}function r(e){const n=document.createElement("textarea");n.value=e,document.body.appendChild(n),n.select();try{document.execCommand("copy"),o("复制成功！已生成可执行代码")}catch(e){o("复制失败："+e,!0)}document.body.removeChild(n)}function a(e,n){return`\n// 会话存储数据导入脚本 - 来自 ${n}\n// 在目标网站的开发者工具控制台中粘贴并执行此代码\n(function() {\n  const data = ${JSON.stringify(e,null,2)};\n  Object.entries(data).forEach(([key, value]) => {\n    try {\n      sessionStorage.setItem(key, value);\n      console.log('✅ 成功导入:', key);\n    } catch (error) {\n      console.error('❌ 导入失败:', key, error);\n    }\n  });\n  console.log('🎉 导入完成！');\n})();`}function s(e,n){const t=`\n      (function() {\n        try {\n          const data = ${JSON.stringify(e)};\n          Object.entries(data).forEach(([key, value]) => {\n            try {\n              sessionStorage.setItem(key, value);\n              console.log('✅ 成功设置:', key);\n            } catch(e) {\n              console.error('❌ 设置失败:', key, e);\n            }\n          });\n          console.log('🎉 导入完成！共导入 ' + Object.keys(data).length + ' 个项目');\n        } catch(e) {\n          console.error('❌ 执行失败:', e);\n        }\n      })();\n    `;chrome.devtools.inspectedWindow.eval(t,((e,t)=>{if(t)return console.error("执行失败:",t),void o("执行失败: "+t.value,!0);o("成功导入数据到 "+n)}))}function l(){console.log("Refreshing storage data..."),chrome.devtools.inspectedWindow.eval('\n      (function() {\n        try {\n          console.log("Starting data collection...");\n          \n          // 获取所有iframe\n          const frames = Array.from(document.getElementsByTagName(\'iframe\'));\n          console.log("Found frames:", frames.length);\n          frames.forEach(frame => console.log("Frame src:", frame.src));\n          \n          // 获取主页面的存储数据\n          console.log("Getting main page storage...");\n          const mainStorage = {\n            origin: window.location.origin,\n            href: window.location.href,\n            data: {}\n          };\n          \n          try {\n            console.log("SessionStorage available in main page:", !!window.sessionStorage);\n            console.log("SessionStorage length:", window.sessionStorage ? window.sessionStorage.length : 0);\n            \n            const storage = window.sessionStorage;\n            if (storage) {\n              // 列出所有的键\n              const keys = [];\n              for (let i = 0; i < storage.length; i++) {\n                keys.push(storage.key(i));\n              }\n              console.log("Available keys in main page:", keys);\n              \n              // 获取所有值\n              for (let i = 0; i < storage.length; i++) {\n                const key = storage.key(i);\n                try {\n                  mainStorage.data[key] = storage.getItem(key);\n                  console.log("Got value for key in main page:", key);\n                } catch (e) {\n                  console.error("Error getting value for key in main page:", key, e);\n                }\n              }\n            }\n          } catch (e) {\n            console.error("Error accessing main page storage:", e);\n          }\n          \n          console.log("Main page storage:", mainStorage);\n\n          // 收集iframe信息\n          const iframeResults = frames\n            .filter(frame => frame.src)\n            .map(frame => ({\n              frameURL: frame.src,\n              needsEvaluation: true\n            }));\n          \n          return {\n            mainStorage: mainStorage,\n            iframeResults: iframeResults\n          };\n        } catch(e) {\n          console.error("Error in main script:", e);\n          return {\n            mainStorage: { origin: window.location.origin, data: {} },\n            iframeResults: []\n          };\n        }\n      })()\n    ',(async function(e,t){if(t)return console.error("Failed to get storage data:",t),void o("获取存储数据失败: "+t.value,!0);console.log("Got initial data:",e);const l=[];if(e&&e.mainStorage&&Object.keys(e.mainStorage.data).length>0&&l.push(e.mainStorage),e&&Array.isArray(e.iframeResults))for(const n of e.iframeResults)try{const e=await new Promise((e=>{chrome.devtools.inspectedWindow.eval('\n      (function() {\n        try {\n          console.log("Running in iframe context");\n          console.log("Current URL:", window.location.href);\n          console.log("Current origin:", window.location.origin);\n          \n          // 尝试访问sessionStorage\n          console.log("SessionStorage available:", !!window.sessionStorage);\n          console.log("SessionStorage length:", window.sessionStorage ? window.sessionStorage.length : 0);\n          \n          const data = {};\n          const storage = window.sessionStorage;\n          \n          if (storage) {\n            // 列出所有的键\n            const keys = [];\n            for (let i = 0; i < storage.length; i++) {\n              keys.push(storage.key(i));\n            }\n            console.log("Available keys:", keys);\n            \n            // 获取所有值\n            for (let i = 0; i < storage.length; i++) {\n              const key = storage.key(i);\n              try {\n                data[key] = storage.getItem(key);\n                console.log("Got value for key:", key);\n              } catch (e) {\n                console.error("Error getting value for key:", key, e);\n              }\n            }\n          }\n          \n          const result = {\n            origin: window.location.origin,\n            href: window.location.href,\n            data: data\n          };\n          console.log("Returning result:", result);\n          return result;\n        } catch(e) {\n          console.error("Error in iframe script:", e);\n          return {\n            error: e.message,\n            origin: window.location.origin,\n            href: window.location.href,\n            data: {}\n          };\n        }\n      })()\n    ',{frameURL:n.frameURL},((t,o)=>{if(o)return console.error("Error executing in frame:",n.frameURL,o),void e(null);console.log("Frame result for",n.frameURL,":",t),e(t)}))}));e&&Object.keys(e.data).length>0&&l.push(e)}catch(e){console.error("Error evaluating frame:",n.frameURL,e)}if(console.log("Final results:",l),n.innerHTML="",0===l.length){const e=document.createElement("div");return e.style.padding="10px",e.style.color="#666",e.textContent="没有找到任何会话存储数据",void n.appendChild(e)}const i={};if(l.forEach((e=>{if(e&&e.origin&&e.data){console.log("Processing storage from origin:",e.origin);const t=function(e,n){const t=document.createElement("div");t.className="storage-section",t.style.marginBottom="30px",t.style.backgroundColor="#fff",t.style.borderRadius="8px",t.style.boxShadow="0 1px 3px rgba(0,0,0,0.1)",t.style.overflow="hidden";const o=document.createElement("div");o.style.padding="15px",o.style.backgroundColor="#e3f2fd",o.style.borderBottom="1px solid #bbdefb",o.style.display="flex",o.style.justifyContent="space-between",o.style.alignItems="center";const l=document.createElement("div");l.textContent="源: "+e,l.style.fontWeight="bold",l.style.color="#1976D2";const i=document.createElement("button");i.textContent="复制此源所有数据",i.onclick=()=>{r(a(n,e))};const c=document.createElement("button");c.textContent="导入此源所有数据",c.style.marginLeft="5px",c.style.backgroundColor="#4CAF50",c.onclick=()=>{s(n,e)},o.appendChild(l),o.appendChild(i),o.appendChild(c),t.appendChild(o);const d=document.createElement("div");if(d.style.padding="15px",0===Object.keys(n).length){const e=document.createElement("div");e.style.padding="10px",e.style.color="#666",e.textContent="此源没有会话存储数据",d.appendChild(e)}else Object.entries(n).forEach((([n,t])=>{const o=document.createElement("div");o.style.margin="10px 0",o.style.padding="10px",o.style.border="1px solid #ddd",o.style.borderRadius="4px",o.style.backgroundColor="#f8f8f8";const l=document.createElement("span");l.textContent=n,l.style.fontWeight="bold",l.style.color="#2196F3";const i=document.createElement("span");i.textContent=": "+t;const c=document.createElement("button");c.textContent="复制键名",c.style.float="right",c.style.marginLeft="5px",c.onclick=()=>{r(n)};const g=document.createElement("button");g.textContent="复制值",g.style.float="right",g.style.marginLeft="5px",g.onclick=()=>{r(t)};const m=document.createElement("button");m.textContent="复制为代码",m.style.float="right",m.onclick=()=>{r(a({[n]:t},e))};const u=document.createElement("button");u.textContent="直接导入",u.style.float="right",u.style.marginRight="5px",u.style.backgroundColor="#4CAF50",u.onclick=()=>{s({[n]:t},e)},o.appendChild(l),o.appendChild(i),o.appendChild(c),o.appendChild(g),o.appendChild(m),o.appendChild(u),d.appendChild(o)}));return t.appendChild(d),t}(e.origin,e.data);n.appendChild(t),Object.assign(i,e.data)}})),0===Object.keys(i).length){const e=document.createElement("div");return e.style.padding="10px",e.style.color="#666",e.textContent="没有找到任何会话存储数据（已尝试访问所有可见的iframe）",void n.appendChild(e)}const c=document.createElement("div");c.style.marginTop="20px",c.style.textAlign="center",c.style.padding="20px",c.style.backgroundColor="#fff",c.style.borderRadius="8px",c.style.boxShadow="0 1px 3px rgba(0,0,0,0.1)";const d=document.createElement("button");d.textContent="复制所有源的数据为可执行代码",d.style.padding="10px 20px",d.onclick=()=>{r(a(i,"所有源"))};const g=document.createElement("button");g.textContent="导入所有源的数据",g.style.padding="10px 20px",g.style.marginLeft="10px",g.style.backgroundColor="#4CAF50",g.onclick=()=>{s(i,"所有源")},c.appendChild(d),c.appendChild(g),n.appendChild(c)}))}e&&n&&t?(console.log("All elements found successfully"),e.addEventListener("click",(function(){console.log("Refresh button clicked"),l()})),console.log("Initial data load"),l()):console.error("Some elements were not found!")}));